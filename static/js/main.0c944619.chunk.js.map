{"version":3,"sources":["components/appSkeleton/siteHeader/AppLogo.js","components/appPages/eventsPage/gameRewardsPage/gameRewardsComponents/StarRating.js","components/appPages/eventsPage/gameRewardsPage/gameRewardsComponents/PlayerRewardsComponent.js","components/appPages/eventsPage/gameRewardsPage/gameRewardsComponents/TeamRewardsComponentv2.js","components/util/BuildSelectFormFromAnArray.js","components/firebase/setDocumentWithIdInFirestore.js","components/appPages/eventsPage/gameRewardsPage/GameRewardsComponent.js","App.js","components/firebase/readDocOnceFromRoot.js","index.js"],"names":["AppLogo","className","role","Star","selected","onSelect","size","color","onClick","StarRating","totalStars","returnSelectedStars","f","selectedStars","setSelectedStars","useState","useEffect","length","Array","map","n","i","PlayerRewardsComponent","playerName","updateTeamRewards","playerRating","setPlayerRating","pre","TeamRewardsComponent","teamPlayers","teamName","teamCaptain","style","padding","fontSize","player","BuildSelectFormFromAnArray","optionsArray","selectLabel","stateVariable","setStateVariable","htmlFor","name","title","value","onChange","e","target","vlaue","setDocWithIdInFirestore","async","collectionId","docId","document","documentRef","firebase","firestore","collection","doc","set","merge","then","console","log","catch","error","GameRewardsComponent","teamOne","teamTwo","gameNumber","saveStatus","setSaveStatus","compare","a","b","hasUnratedPlayers","rewardsList","Object","values","some","team1Name","team1Captain","team1PlayersList","reduce","acc","concat","sort","team2Name","team2Captain","team2PlayersList","completePlayersList","raterName","setRaterName","team1Rewards","setTeam1Rewards","team2Rewards","setTeam2Rewards","gameBestPlayerReward","setGameBestPlayerReward","team1HasUnratedPlayers","team2HasUnratedPlayers","completeRewardsData","setCompleteRewardsData","kingOfTheMatch","type","filter","p","rewards","textAlign","margin","App","closed","loading","setLoading","eventInformation","setEventInformation","setLoadingFunction","updateObjectFunction","get","exists","firestoreDataAcquired","data","readDocOnceFromRoot","urlGameID","URLSearchParams","window","location","search","eventName","eventNumber","eventGames","gameOne","gameLocation","gameName","gameTeams","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","rootElement","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.0c944619.chunk.js","sourcesContent":["export default function AppLogo() {\r\n  return (\r\n    <h1 className=\"hidden-content\">\r\n      Do2gether{\" \"}\r\n      <span role=\"img\" aria-label=\"Soccer ball\">\r\n        ⚽\r\n      </span>\r\n    </h1>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { FaStar } from \"react-icons/fa\";\r\n//Helper function to create an array of any length we want of anything we want!\r\nconst createArray = (length) => [...Array(length)];\r\n\r\nfunction Star({ selected = false, onSelect }) {\r\n  return (\r\n    <FaStar\r\n      size={\"2em\"}\r\n      color={selected ? \"gold\" : \"#444444\"}\r\n      onClick={onSelect}\r\n    />\r\n  );\r\n}\r\n\r\nexport default function StarRating({\r\n  totalStars = 5,\r\n  returnSelectedStars = (f) => f\r\n}) {\r\n  const [selectedStars, setSelectedStars] = useState(0);\r\n  useEffect(() => returnSelectedStars(selectedStars), [\r\n    selectedStars,\r\n    returnSelectedStars\r\n  ]);\r\n  return (\r\n    <div>\r\n      {createArray(totalStars).map((n, i) => (\r\n        <Star\r\n          key={i}\r\n          selected={selectedStars > i}\r\n          onSelect={() => setSelectedStars(i + 1)}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport StarRating from \"./StarRating\";\r\nexport default function PlayerRewardsComponent({\r\n  playerName,\r\n  updateTeamRewards = (f) => f\r\n}) {\r\n  const [playerRating, setPlayerRating] = useState(0);\r\n\r\n  useEffect(() => {\r\n    updateTeamRewards((pre) => ({ ...pre, [playerName]: playerRating }));\r\n  }, [playerRating]);\r\n  return (\r\n    <div className=\"playerRatingComponent\">\r\n      {playerName} ⭐x{playerRating}\r\n      <StarRating returnSelectedStars={setPlayerRating} />\r\n    </div>\r\n  );\r\n}\r\n","import PlayerRewardsComponent from \"./PlayerRewardsComponent\";\r\nexport default function TeamRewardsComponent({\r\n  teamPlayers,\r\n  teamName,\r\n  teamCaptain,\r\n  updateTeamRewards\r\n}) {\r\n  return (\r\n    <>\r\n      <h4\r\n        style={{\r\n          padding: \"10px 0px\"\r\n        }}\r\n      >\r\n        {teamName} Rewards{\" \"}\r\n        <span style={{ fontSize: \"smaller\" }}>{teamCaptain}(C)</span>:\r\n      </h4>\r\n\r\n      {teamPlayers.map((player) => (\r\n        <PlayerRewardsComponent\r\n          key={player}\r\n          playerName={player}\r\n          updateTeamRewards={updateTeamRewards}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","export default function BuildSelectFormFromAnArray({\r\n  optionsArray = [],\r\n  selectLabel = \"Please Select:\",\r\n  stateVariable,\r\n  setStateVariable\r\n}) {\r\n  return (\r\n    <label htmlFor=\"selectForm\">\r\n      {selectLabel}\r\n      <select\r\n        name=\"selectForm\"\r\n        title=\"Select Best Player in this Team:\"\r\n        value={stateVariable}\r\n        onChange={(e) => setStateVariable(e.target.value)}\r\n      >\r\n        <option></option>\r\n        {optionsArray.map((player) => (\r\n          <option key={player} vlaue={player}>\r\n            {player}\r\n          </option>\r\n        ))}\r\n      </select>\r\n    </label>\r\n  );\r\n}\r\n","import firebase from \"firebase\";\r\n\r\nconst setDocWithIdInFirestore = async ({\r\n  collectionId = \"new collection\",\r\n  docId,\r\n  document\r\n}) => {\r\n  const db = firebase.firestore();\r\n  const documentRef = db.collection(collectionId).doc(docId);\r\n\r\n  await documentRef\r\n    .set(document, { merge: true })\r\n    .then(() => {\r\n      console.log(\"Document successfully written!\");\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error writing document: \", error);\r\n    });\r\n};\r\n\r\nexport default setDocWithIdInFirestore;\r\n","import { useState, useEffect } from \"react\";\r\nimport TeamRewardsComponent from \"./gameRewardsComponents/TeamRewardsComponentv2\";\r\nimport BuildSelectFormFromAnArray from \"../../../util/BuildSelectFormFromAnArray\";\r\nimport setDocWithIdInFirestore from \"../../../firebase/setDocumentWithIdInFirestore\";\r\n\r\nexport default function GameRewardsComponent({\r\n  teamOne,\r\n  teamTwo,\r\n  docId,\r\n  gameNumber\r\n}) {\r\n  const [saveStatus, setSaveStatus] = useState(false);\r\n  const updateGameRewards = () => {\r\n    setDocWithIdInFirestore({\r\n      collectionId: \"SoccerMastersEventsCollection\",\r\n      docId: docId,\r\n      document: {\r\n        rewards: {\r\n          [raterName]: { ...completeRewardsData, gameNumber: gameNumber }\r\n        }\r\n      }\r\n    }).then(() => setSaveStatus(true));\r\n  };\r\n  //Function to sort alphabatically\r\n  function compare(a, b) {\r\n    if (a < b) {\r\n      return -1;\r\n    }\r\n    if (a > b) {\r\n      return 1;\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  const hasUnratedPlayers = (rewardsList) => {\r\n    const unratedPlayers = Object.values(rewardsList).some((i) => i === 0);\r\n    return unratedPlayers;\r\n  };\r\n\r\n  //Teams data\r\n  const team1Name = teamOne.teamName;\r\n  const team1Captain = teamOne.teamCaptain;\r\n  const team1PlayersList = Object.values(teamOne.teamPlayers).reduce(\r\n    (acc, player) => acc.concat(player.playerName).sort(compare),\r\n    []\r\n  );\r\n\r\n  const team2Name = teamTwo.teamName;\r\n  const team2Captain = teamTwo.teamCaptain;\r\n  const team2PlayersList = Object.values(teamTwo.teamPlayers).reduce(\r\n    (acc, player) => acc.concat(player.playerName).sort(compare),\r\n    []\r\n  );\r\n\r\n  const completePlayersList = [...team1PlayersList, ...team2PlayersList].sort(\r\n    compare\r\n  );\r\n\r\n  const [raterName, setRaterName] = useState(\"\");\r\n  //team 1 players lists\r\n  const [team1Rewards, setTeam1Rewards] = useState({});\r\n\r\n  //team 2 players lists\r\n  const [team2Rewards, setTeam2Rewards] = useState({});\r\n\r\n  const [gameBestPlayerReward, setGameBestPlayerReward] = useState(\"\");\r\n  const team1HasUnratedPlayers = hasUnratedPlayers(team1Rewards);\r\n  const team2HasUnratedPlayers = hasUnratedPlayers(team2Rewards);\r\n\r\n  //Updating the complete list of ratings and best players\r\n  const [completeRewardsData, setCompleteRewardsData] = useState({});\r\n  useEffect(() => {\r\n    setCompleteRewardsData({\r\n      raterName: raterName,\r\n      team1Rewards: { ...team1Rewards },\r\n      team2Rewards: { ...team2Rewards },\r\n      kingOfTheMatch: gameBestPlayerReward\r\n    });\r\n  }, [raterName, team1Rewards, team2Rewards, gameBestPlayerReward]);\r\n\r\n  if (saveStatus) return <p>Thank you, your response has been submitted 💝</p>;\r\n\r\n  return (\r\n    <>\r\n      {/* Area to enter rater's name for control purposes */}\r\n      <label htmlFor=\"user\">\r\n        Please enter your name: 💖\r\n        <input\r\n          type=\"text\"\r\n          value={raterName}\r\n          onChange={(e) => setRaterName(e.target.value)}\r\n        />\r\n      </label>\r\n\r\n      <BuildSelectFormFromAnArray\r\n        optionsArray={completePlayersList}\r\n        selectLabel=\"👑 Please choose the KING OF THE MATCH: 👑 (⭐x7)\"\r\n        stateVariable={gameBestPlayerReward}\r\n        setStateVariable={setGameBestPlayerReward}\r\n      />\r\n\r\n      {/* Display team rewards components for both teams */}\r\n      {gameBestPlayerReward !== \"\" ? (\r\n        <TeamRewardsComponent\r\n          teamPlayers={team1PlayersList.filter(\r\n            (p) => p !== gameBestPlayerReward\r\n          )}\r\n          teamName={team1Name}\r\n          teamCaptain={team1Captain}\r\n          updateTeamRewards={setTeam1Rewards}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <hr />\r\n\r\n      {gameBestPlayerReward !== \"\" ? (\r\n        <TeamRewardsComponent\r\n          teamPlayers={team2PlayersList.filter(\r\n            (p) => p !== gameBestPlayerReward\r\n          )}\r\n          teamName={team2Name}\r\n          teamCaptain={team2Captain}\r\n          updateTeamRewards={setTeam2Rewards}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {gameBestPlayerReward === \"\" ? (\r\n        \"\"\r\n      ) : raterName === \"\" ? (\r\n        <p className=\"alert\">Please Enter your name to submit</p>\r\n      ) : team1HasUnratedPlayers ? (\r\n        <p className=\"alert\">Please rate all players in {team1Name}.</p>\r\n      ) : team2HasUnratedPlayers ? (\r\n        <p className=\"alert\">Please rate all players in {team2Name}.</p>\r\n      ) : (\r\n        <div\r\n          onClick={updateGameRewards}\r\n          className=\"usableButton\"\r\n          style={{ textAlign: \"center\", margin: \"10px auto\" }}\r\n        >\r\n          Ready to Submit 🥰\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import { useState, useEffect } from \"react\";\nimport \"./styles.css\";\nimport { readDocOnceFromRoot } from \"./components/firebase/readDocOnceFromRoot\";\nimport AppLogo from \"./components/appSkeleton/siteHeader/AppLogo\";\nimport GameRewardsComponent from \"./components/appPages/eventsPage/gameRewardsPage/GameRewardsComponent\";\n\nexport default function App() {\n  const closed = false;\n  const [loading, setLoading] = useState(true);\n  const [eventInformation, setEventInformation] = useState({});\n  const docId = \"event195-teams\";\n\n  useEffect(() => {\n    if (!closed) {\n      readDocOnceFromRoot({\n        collectionId: \"SoccerMastersEventsCollection\",\n        docId: docId,\n        setLoadingFunction: setLoading,\n        updateObjectFunction: setEventInformation\n      });\n    }\n  }, [closed]);\n\n  if (closed)\n    return (\n      <div className=\"App\">\n        <section className=\"SiteHeader\">\n          <AppLogo />\n        </section>\n        <section className=\"MainContent\">\n          <h1>Voting is closed now. Play a game to rate 💪</h1>\n        </section>\n      </div>\n    );\n  if (loading) {\n    return (\n      <div className=\"App\">\n        <section className=\"SiteHeader\">\n          <AppLogo />\n        </section>\n        <section className=\"MainContent\">\n          <h1>Loading ya Qamar 🥰</h1>\n        </section>\n      </div>\n    );\n  } else {\n    const urlParams = new URLSearchParams(window.location.search);\n    const urlGameID = urlParams.get(\"gid\");\n    const { eventName, eventNumber, eventGames } = eventInformation;\n    const gameNumber = urlGameID ? urlGameID : 0;\n    const gameOne = eventGames[gameNumber];\n    const { gameLocation, gameName, gameTeams } = gameOne;\n    const teamOne = gameTeams[0];\n    const teamTwo = gameTeams[1];\n    return (\n      <div className=\"App\">\n        <section className=\"SiteHeader\">\n          <AppLogo />\n        </section>\n        <section className=\"MainContent\">\n          <h2>\n            {eventName} #{eventNumber}\n          </h2>\n          <h3>\n            {gameName} @ {gameLocation}\n          </h3>\n          <p></p>\n          <GameRewardsComponent\n            teamOne={teamOne}\n            teamTwo={teamTwo}\n            docId={docId}\n            gameNumber={gameNumber}\n          />\n        </section>\n      </div>\n    );\n  }\n}\n","import firebase from \"firebase\";\r\n\r\nexport const readDocOnceFromRoot = async ({\r\n  collectionId,\r\n  docId,\r\n  setLoadingFunction,\r\n  updateObjectFunction\r\n}) => {\r\n  setLoadingFunction(true);\r\n  const db = firebase.firestore();\r\n  const documentRef = db.collection(collectionId).doc(docId);\r\n  await documentRef\r\n    .get()\r\n    .then((doc) => {\r\n      if (doc.exists) {\r\n        const firestoreDataAcquired = doc.data();\r\n        // setEventName(firestoreDataAcquired.eventName);\r\n        updateObjectFunction(firestoreDataAcquired);\r\n      } else {\r\n        // doc.data() will be undefined in this case\r\n        return console.log(\"No such document!\");\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.log(\"Error getting document:\", error);\r\n    });\r\n  setLoadingFunction(false);\r\n};\r\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport firebase from \"firebase\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD9VNI8v-CwRAnmtsSby4vq8YYi8XI1S8c\",\n  authDomain: \"do2gether-22.firebaseapp.com\",\n  projectId: \"do2gether-22\",\n  storageBucket: \"do2gether-22.appspot.com\",\n  messagingSenderId: \"241882367589\",\n  appId: \"1:241882367589:web:fd8a4fd44c538b578be88c\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}